[tool.poetry]
name = "youworker-agent-backend"
version = "0.1.0"
description = "Production-ready AI agent backend with dynamic MCP tools"
authors = ["YouWorker Team"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"

# API
fastapi = "^0.120.0"
uvicorn = {extras = ["standard"], version = "^0.38.0"}
pydantic = "^2.9.2"
pydantic-settings = "^2.6.1"
python-multipart = "^0.0.20"
slowapi = "^0.1.9"
websockets = ">=12,<16"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}

# LLM & MCP
httpx = "^0.28.1"

# Vector store
qdrant-client = "^1.12.1"
sqlalchemy = "^2.0.44"
asyncpg = "^0.30.0"
greenlet = "^3.1.1"
alembic = "^1.17.0"
psycopg = {extras = ["binary"], version = "^3.1.18"}

# Ingestion
docling = "^2.15.0"
docling-core = "^2.8.1"
numpy = ">=1.26,<3.0"
faster-whisper = "^1.2.0"
piper-tts = "^1.3.0"

# Web scraping
beautifulsoup4 = "^4.12.3"
lxml = "^5.3.0"
pandas = "^2.2.3"
pdfplumber = "^0.11.4"
Pillow = ">=10.4.0,<12.0.0"
pytesseract = "^0.3.13"

# Utilities
python-dateutil = "^2.9.0"
pytz = ">=2024.2"
tenacity = "^9.0.0"
ffmpeg-python = "^0.2.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
pytest-asyncio = "^1.2.0"
pytest-cov = "^7.0.0"
black = "^25.9.0"
ruff = "^0.14.2"
safety = "^2.3.5"
requests = "^2.32.3"
mypy = "^1.11.0"
types-python-dateutil = "^2.9.0"
types-pytz = "^2024.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py311']

[tool.ruff]
line-length = 100
target-version = "py311"

# Enable pycodestyle (`E`), Pyflakes (`F`), pyupgrade (`UP`), and more
select = [
    "E",      # pycodestyle errors
    "F",      # Pyflakes
    "UP",     # pyupgrade (enforces modern Python syntax)
    "B",      # flake8-bugbear
    "SIM",    # flake8-simplify
    "I",      # isort
    "DTZ",    # flake8-datetimez (prevent naive datetime usage)
]

ignore = [
    "E501",   # Line too long (handled by formatter)
]

[tool.ruff.lint.pyupgrade]
# Keep runtime-required Union syntax for Python < 3.10, but we target 3.11+
keep-runtime-typing = false

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
asyncio_default_fixture_loop_scope = "function"

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
pretty = true
show_error_codes = true
show_column_numbers = true

# Per-module relaxed settings for gradual typing adoption
[[tool.mypy.overrides]]
module = [
    "docling.*",
    "docling_core.*",
    "faster_whisper.*",
    "piper_tts.*",
    "pytesseract.*",
    "pdfplumber.*",
    "qdrant_client.*",
    "slowapi.*",
    "ffmpeg.*",
    "bs4.*",
    "pandas.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "packages.db.crud"
# Legacy CRUD functions - relaxed checks during migration
disallow_untyped_defs = false
disallow_untyped_calls = false

[[tool.mypy.overrides]]
module = "apps.api.routes.*"
# Routes are being gradually typed
disallow_untyped_decorators = false
