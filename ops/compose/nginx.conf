events {
    worker_connections 1024;
}

http {
    # Custom log format to show request headers
    log_format debug_headers '$remote_addr - $remote_user [$time_local] '
                             '"$request" $status $body_bytes_sent '
                             '"$http_referer" "$http_user_agent" '
                             'X-API-Key: "$http_x_api_key"';
    upstream frontend {
        server frontend:3000;
    }

    upstream api {
        server api:8001;
    }

    # HTTPS server on port 8000
    server {
        listen 8000 ssl;
        http2 on;
        server_name 95.110.228.79;

        # Self-signed certificate
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;

        # Strong SSL settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # Increase buffer sizes
        client_max_body_size 100M;
        client_body_buffer_size 128k;

        # Proxy settings
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-API-Key $http_x_api_key;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # API endpoints with detailed logging
        location /v1/ {
            access_log /var/log/nginx/api_access.log debug_headers;
            proxy_pass http://api;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }
    
        location /health {
            access_log /var/log/nginx/api_access.log debug_headers;
            proxy_pass http://api;
        }

        # Frontend
        location / {
            proxy_pass http://frontend;
            proxy_read_timeout 300s;
        }
    }
}