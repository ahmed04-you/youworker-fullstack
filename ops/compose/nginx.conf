events {
    worker_connections 1024;
}

http {
    # WebSocket connection upgrade map
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Custom log format to show request headers
    log_format debug_headers '$remote_addr - $remote_user [$time_local] '
                             '"$request" $status $body_bytes_sent '
                             '"$http_referer" "$http_user_agent" '
                             'X-API-Key: "$http_x_api_key"';
    
    upstream frontend {
        server frontend:3000;
    }

    upstream api {
        server api:8001;
    }

    # HTTP server on port 8000 for local development (no SSL)
    server {
        listen 8000;
        http2 on;
        # Accept localhost and any host header in local/dev
        server_name _;

        set $simulated_authentik_api_key "0faf17a7839141893463c2fc7ab1dadf992520e901296aaac0f9a084d258f456";
        set $simulated_authentik_username "root";

        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "accelerometer=(), camera=(), geolocation=(), microphone=(self), payment=(), usb=()" always;
        add_header Content-Security-Policy "default-src 'self'; connect-src 'self' ws: http://localhost http://localhost:8000 http://localhost:8001 http://localhost:11434 http://localhost:6333 http://localhost:9090; img-src 'self' data: blob: https:; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; script-src 'self' 'unsafe-inline' 'unsafe-eval'; font-src 'self' data: https://fonts.gstatic.com; media-src 'self' blob: data:; frame-ancestors 'self'; object-src 'none';" always;

        # Increase buffer sizes
        client_max_body_size 100M;
        client_body_buffer_size 128k;

        # Proxy settings (common for all locations)
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-API-Key $http_x_api_key;
        proxy_set_header X-Authentik-Api-Key $simulated_authentik_api_key;
        proxy_set_header X-Authentik-Username $simulated_authentik_username;

        # WebSocket chat endpoint - only for WebSocket connections with session ID
        # This must match /chat/{session_id} pattern and have WebSocket upgrade
        location ~ ^/chat/[^/]+$ {
            access_log /var/log/nginx/api_access.log debug_headers;
            
            # Only proxy if it's a WebSocket upgrade request
            if ($http_upgrade != "websocket") {
                return 404;
            }
            
            proxy_pass http://api;
            
            # WebSocket specific settings
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-API-Key $http_x_api_key;
            proxy_set_header X-Authentik-Api-Key $simulated_authentik_api_key;
            proxy_set_header X-Authentik-Username $simulated_authentik_username;
            
            # Timeouts for WebSocket
            proxy_read_timeout 3600s;
            proxy_connect_timeout 75s;
            proxy_send_timeout 3600s;
            
            # Disable buffering for WebSocket
            proxy_buffering off;
        }

        # API endpoints with detailed logging
        location /v1/ {
            access_log /var/log/nginx/api_access.log debug_headers;
            proxy_pass http://api;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }
    
        location /health {
            access_log /var/log/nginx/api_access.log debug_headers;
            proxy_pass http://api;
        }

        # Frontend
        location / {
            proxy_pass http://frontend;
            proxy_read_timeout 300s;
        }
    }
}
