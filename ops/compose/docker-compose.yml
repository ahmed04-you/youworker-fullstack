x-ollama-gpu-deploy: &ollama-gpu-deploy
  resources:
    reservations:
      devices:
        - driver: nvidia
          count: all
          capabilities: [gpu]

x-ollama-gpu-env: &ollama-gpu-env
  NVIDIA_VISIBLE_DEVICES: "all"
  NVIDIA_DRIVER_CAPABILITIES: "compute,utility"

services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    env_file:
      - ../../.env
    ports:
      - "5432:5432"
    volumes:
      - ../../data/postgres:/var/lib/postgresql/data
  qdrant:
    image: qdrant/qdrant:latest
    restart: unless-stopped
    ports:
      - "6333:6333"
    volumes:
      - ../../data/qdrant:/qdrant/storage

  ollama:
    image: ollama/ollama:latest
    restart: unless-stopped
    ports:
      - "11434:11434"
    deploy: *ollama-gpu-deploy
    volumes:
      - ../../data/ollama:/root/.ollama
    environment:
      <<: *ollama-gpu-env

  mcp_web:
    build:
      context: ../..
      dockerfile: ops/docker/Dockerfile.mcp_web
    command: ["uvicorn", "apps.mcp_servers.web.server:app", "--host", "0.0.0.0", "--port", "7001"]
    restart: unless-stopped
    ports:
      - "7001:7001"

  mcp_semantic:
    build:
      context: ../..
      dockerfile: ops/docker/Dockerfile.mcp_semantic
    command: ["uvicorn", "apps.mcp_servers.semantic.server:app", "--host", "0.0.0.0", "--port", "7002"]
    restart: unless-stopped
    ports:
      - "7002:7002"
    depends_on:
      - qdrant
      - ollama

  mcp_datetime:
    build:
      context: ../..
      dockerfile: ops/docker/Dockerfile.mcp_datetime
    command: ["uvicorn", "apps.mcp_servers.datetime.server:app", "--host", "0.0.0.0", "--port", "7003"]
    restart: unless-stopped
    ports:
      - "7003:7003"

  mcp_ingest:
    build:
      context: ../..
      dockerfile: ops/docker/Dockerfile.mcp_ingest
    command: ["uvicorn", "apps.mcp_servers.ingest.server:app", "--host", "0.0.0.0", "--port", "7004"]
    restart: unless-stopped
    env_file:
      - ../../.env
    ports:
      - "7004:7004"
    depends_on:
      - qdrant
      - ollama
      - postgres

  mcp_units:
    build:
      context: ../..
      dockerfile: ops/docker/Dockerfile.mcp_units
    command: ["uvicorn", "apps.mcp_servers.units.server:app", "--host", "0.0.0.0", "--port", "7005"]
    restart: unless-stopped
    ports:
      - "7005:7005"

  api:
    build:
      context: ../..
      dockerfile: ops/docker/Dockerfile.api
      args:
        ENABLE_GPU_TORCH: ${ENABLE_GPU_TORCH:-0}
    env_file:
      - ../../.env
    environment:
      <<: *ollama-gpu-env
    restart: unless-stopped
    deploy: *ollama-gpu-deploy
    gpus: "all"
    ports:
      - "8001:8001"
    volumes:
      - ../../examples/ingestion:/data/examples:ro
      - ../../data/uploads:/data/uploads
      - ../../data/models:/app/models:ro
    depends_on:
      ollama:
        condition: service_started
      qdrant:
        condition: service_started
      postgres:
        condition: service_started
      mcp_web:
        condition: service_started
      mcp_semantic:
        condition: service_started
      mcp_datetime:
        condition: service_started
      mcp_ingest:
        condition: service_started
      mcp_units:
        condition: service_started

  frontend:
    build:
      context: ../..
      dockerfile: ops/docker/Dockerfile.frontend
      args:
        NEXT_PUBLIC_API_BASE_URL: ${NEXT_PUBLIC_API_BASE_URL:-}
        NEXT_PUBLIC_API_PORT: ${NEXT_PUBLIC_API_PORT:-8000}
        NEXT_PUBLIC_API_KEY: ${NEXT_PUBLIC_API_KEY:-dev-root-key}
    env_file:
      - ../../.env
    restart: unless-stopped
    depends_on:
      api:
        condition: service_started

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ../../data/nginx/ssl:/etc/nginx/ssl
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        apk add --no-cache openssl
        if [ ! -f /etc/nginx/ssl/cert.pem ]; then
          mkdir -p /etc/nginx/ssl
          openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
            -keyout /etc/nginx/ssl/key.pem \
            -out /etc/nginx/ssl/cert.pem \
            -subj "/C=IT/ST=State/L=City/O=YouWorker/OU=IT/CN=95.110.228.79" \
            -addext "subjectAltName=IP:95.110.228.79"
          chmod 600 /etc/nginx/ssl/key.pem
          chmod 644 /etc/nginx/ssl/cert.pem
          echo "Self-signed certificate generated"
        else
          echo "Certificate already exists"
        fi
        exec nginx -g "daemon off;"
    depends_on:
      - frontend
      - api
