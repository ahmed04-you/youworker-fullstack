FROM python:3.11-slim AS base

ARG ENABLE_GPU_TORCH=0

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    UV_PIP_SYSTEM=1 \
    PATH="/root/.local/bin:${PATH}" \
    PYTHONPATH="/app" \
    LD_LIBRARY_PATH="/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/lib:/usr/local/cuda/lib64:/usr/local/lib/python3.11/site-packages/nvidia/cudnn/lib:/usr/local/lib/python3.11/site-packages/nvidia/cublas/lib:/usr/local/lib/python3.11/site-packages/nvidia/cusolver/lib:/usr/local/lib/python3.11/site-packages/nvidia/cusparse/lib:/usr/local/lib/python3.11/site-packages/nvidia/cufft/lib:/usr/local/lib/python3.11/site-packages/nvidia/cuda_runtime/lib:/usr/local/lib/python3.11/site-packages/nvidia/cuda_nvrtc/lib:/usr/local/lib/python3.11/site-packages/nvidia/cuda_cupti/lib:/usr/local/lib/python3.11/site-packages/nvidia/curand/lib:/usr/local/lib/python3.11/site-packages/nvidia/nvjitlink/lib:/usr/local/lib/python3.11/site-packages/nvidia/nvtx/lib"

WORKDIR /app

RUN apt-get update && apt-get install -y --no-install-recommends \
    ffmpeg \
    tesseract-ocr \
    poppler-utils \
    libglib2.0-0 \
    libsm6 \
    libxrender1 \
    libxext6 \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

RUN useradd --create-home --uid 1001 appuser

# Install uv in a separate layer to ensure it's properly cached
RUN pip install --user --no-cache-dir uv \
    && /root/.local/bin/uv --version

COPY requirements.txt /app/requirements.txt

RUN /root/.local/bin/uv pip install --system --no-cache-dir --upgrade pip \
    && /root/.local/bin/uv pip install --system --no-cache-dir --requirement requirements.txt \
    && if [ "$ENABLE_GPU_TORCH" = "1" ]; then \
        /root/.local/bin/uv pip install --system --no-cache-dir --index-url https://download.pytorch.org/whl/cu121 torch==2.5.1; \
    fi \
    && find /usr/local/lib/python3.11/site-packages -name "*.pyc" -delete \
    && find /usr/local/lib/python3.11/site-packages -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true

COPY packages /app/packages
COPY apps /app/apps
COPY ops/alembic /app/ops/alembic
COPY README.md /app/README.md

# Download Piper TTS model during build
RUN set -eux; \
    mkdir -p /opt/youworker/tts /app/models/tts; \
    curl -L \
      -o /tmp/it_IT-riccardo-x_low.onnx \
      https://huggingface.co/rhasspy/piper-voices/resolve/main/it/it_IT/riccardo/x_low/it_IT-riccardo-x_low.onnx; \
    curl -L \
      -o /tmp/it_IT-riccardo-x_low.onnx.json \
      https://huggingface.co/rhasspy/piper-voices/resolve/main/it/it_IT/riccardo/x_low/it_IT-riccardo-x_low.onnx.json; \
    mv /tmp/it_IT-riccardo-x_low.onnx /app/models/tts/; \
    mv /tmp/it_IT-riccardo-x_low.onnx.json /app/models/tts/; \
    mkdir -p /data/uploads /data/examples /app/models && \
    chown -R appuser:appuser /app /data/uploads /data/examples /app/models

EXPOSE 8001

USER appuser

CMD ["uvicorn", "apps.api.main:app", "--host", "0.0.0.0", "--port", "8001", "--timeout-keep-alive", "75", "--limit-concurrency", "1000", "--backlog", "2048"]
